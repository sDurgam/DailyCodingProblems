	/*
	 * Given a list of numbers and a number k, return whether any two numbers from
	 * the list add up to k.
	 */
public class Day1 {
	static boolean isTargetSumPair(int[] arr, int k) {
		if (arr == null)
			return false;
		Arrays.sort(arr);
		int left = 0;
		int right = arr.length - 1;
		while (left < right) {
			int sum = arr[left] + arr[right];
			if (sum == k) {
				return true;
			} else if (sum < k) {
				left++;
			} else {
				right--;
			}
		}
		return false;
	}
}

class Day1Test {
	@Test
	void testNullArray() {
		assertFalse(Day1.isTargetSumPair(null, 0));
	}

	@Test
	void testSumExists() {
		int[] arr = { 10, 15, 3, 7 };
		assertTrue(Day1.isTargetSumPair(arr, 10));
		assertTrue(Day1.isTargetSumPair(arr, 13));
		assertTrue(Day1.isTargetSumPair(arr, 18));
	}

	@Test
	void testSumNotExists() {
		int[] arr = { 10, 15, 3, 7 };
		assertFalse(Day1.isTargetSumPair(arr, 12));
		assertFalse(Day1.isTargetSumPair(arr, 11));
		assertFalse(Day1.isTargetSumPair(arr, 16));
	}
}
